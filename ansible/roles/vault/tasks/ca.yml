---
- name: Configure Vault CA
  hosts: localhost
  gather_facts: no
  environment:
    VAULT_CACERT: ../tmp/root_ca.crt
  tasks:
    - name: Check if root PKI secrets engine is enabled
      ansible.builtin.shell: vault read -format=json sys/mounts
      register: pki_read_json
    - set_fact: pki_read="{{ pki_read_json.stdout | from_json }}"
    - name: Enable root PKI secrets engine
      ansible.builtin.shell: vault secrets enable pki
      when: pki_read.data['pki/'] is not defined
    - name: Tune root PKI engine max TTL
      ansible.builtin.shell: vault secrets tune -max-lease-ttl=87600h pki
    - name: Check for root certificate
      ansible.builtin.shell: vault read pki/cert/ca
      ignore_errors: true
      register: ca_read
    - name: Generate root certificate
      ansible.builtin.shell: |
        vault write pki/root/generate/internal \
          common_name="gilman.io" \
          ttl=87600h
      when: ca_read.stderr == "No value found at pki/cert/ca"
    - name: Check if intermediate PKI secrets engine is enabled
      ansible.builtin.shell: vault read -format=json sys/mounts
      register: pki_read_json
    - set_fact: pki_read="{{ pki_read_json.stdout | from_json }}"
    - name: Enable intermediate PKI secrets engine
      ansible.builtin.shell: vault secrets enable -path=pki_int pki
      when: pki_read.data['pki_int/'] is not defined
    - name: Tune intermediate PKI engine max TTL
      ansible.builtin.shell: vault secrets tune -max-lease-ttl=43800h pki_int
    - name: Check for intermediate certificate
      ansible.builtin.shell: vault read pki_int/cert/ca
      ignore_errors: true
      register: ca_read
    - name: Generate intermediate certificate and CSR
      ansible.builtin.shell: |
        vault write -format=json pki_int/intermediate/generate/internal \
          common_name="gilman.io intermediate"
      register: int_csr_json
      when: ca_read.stderr == "No value found at pki_int/cert/ca"
    - set_fact: int_csr="{{ int_csr_json.stdout | from_json }}"
      when: ca_read.stderr == "No value found at pki_int/cert/ca"
    - name: Sign intermediate CSR
      ansible.builtin.shell: |
        vault write -format=json pki/root/sign-intermediate \
          csr="{{ int_csr.data.csr }}" \
          format=pem_bundle \ 
          ttl=43800h
      register: int_cert_json
      when: ca_read.stderr == "No value found at pki_int/cert/ca"
    - set_fact: int_cert="{{ int_cert_json.stdout | from_json }}"
      when: ca_read.stderr == "No value found at pki_int/cert/ca"
    - name: Import signed intermediate certificate
      ansible.builtin.shell: |
        vault write pki_int/intermediate/set-signed \ 
          certificate="{{ int_cert.data.certificate }}"
      when: ca_read.stderr == "No value found at pki_int/cert/ca"
    - name: Create signing role
      ansible.builtin.shell: |
        vault write pki_int/roles/gilman-dot-io \
          allowed_domains="gilman.io" \
          allow_subdomains=true \
          max_ttl=2160h