---
- name: Enable root PKI backend
  hashivault_secret_engine:
    name: "{{ vault.engines.pki.root.mount }}"
    backend: pki
    config:
      max_lease_ttl: "{{ vault.engines.pki.root.config.ttl }}"
- name: Create root CA
  hashivault_pki_ca:
    kind: root
    mount_point: "{{ vault.engines.pki.root.mount }}"
    common_name: "{{ vault.engines.pki.root.name }}"
    config:
      ttl: "{{ vault.engines.pki.root.config.ttl }}"
- name: Enable intermediate PKI backend
  hashivault_secret_engine:
    name: "{{ vault.engines.pki.int.mount }}"
    backend: pki
    config:
      max_lease_ttl: "{{ vault.engines.pki.int.config.ttl }}"
- name: Create intermediate CA
  hashivault_pki_ca:
    kind: intermediate
    mount_point: "{{ vault.engines.pki.int.mount }}"
    common_name: "{{ vault.engines.pki.int.name }}"
  register: int_csr
- name: Sign intermediate CSR
  hashivault_pki_cert_sign:
    type: intermediate
    mount_point: "{{ vault.engines.pki.root.mount }}"
    common_name: "{{ vault.engines.pki.int.name }}"
    csr: "{{ int_csr.data.csr }}"
    extra_params:
      ttl: "{{ vault.engines.pki.int.config.ttl }}"
  register: signed_int_cert
  when: int_csr.changed
- name: Import signed intermediate certificate
  hashivault_pki_set_signed:
    mount_point: "{{ vault.engines.pki.int.mount }}"
    certificate: "{{ signed_int_cert.data.certificate }}\n{{ signed_int_cert.data.issuing_ca }}"
  when: int_csr.changed
- name: Create PKI roles
  hashivault_pki_role:
    name: "{{ item.key }}"
    mount_point: "{{ item.value.mount }}"
    config:  "{{ item.value.config }}"
  with_dict: "{{ vault.engines.pki.roles }}"